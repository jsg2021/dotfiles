#!/bin/bash
# set -x
set -e
{ #prevent exec until fully downloaded?

    CWD=$(dirname -- "$(readlink -f -- "$0")")
    DIR=~/.dotfiles
    HOME=~/

    function fetch_files() {
        if [ "$CODESPACES" = true ]; then
            echo "Running in codespaces..."
            DIR="/workspaces/.codespaces/.persistedshare/dotfiles"
        fi

        if [ ! -d $DIR ]; then
            git clone https://github.com/jsg2021/dotfiles.git $DIR
            cd $DIR
            git submodule update --init --recursive
        fi

    }

    function install_tools() {

        if ! command -v fnm &>/dev/null; then
            curl -fsSL https://fnm.vercel.app/install | bash
        fi

        if [ "$CODESPACES" = true ]; then
            echo "Running in codespaces...skipping desktop apps"
        else
            sh $CWD/scripts/install-1password
            sh $CWD/scripts/install-github
        fi

        install_my_tool bat fzf lsd entr ripgrep stow zoxide tmux neovim

        if [ ! -d ~/.tmux/plugins/tpm ]; then
            git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
        fi
    }

    function install_homebrew() {
        if ! command -v brew &>/dev/null; then
            bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            eval "$(/opt/homebrew/bin/brew shellenv)"
        fi
    }

    function install_configs() {
        stow -t $HOME -d $DIR -S configs
        # stow -vvv -t $HOME -d $DIR -S configs
        
        # set shell
        if [[ "$SHELL" != $(which zsh) ]]; then
            chsh -s $(which zsh)
            if [[ "$OSTYPE" != "darwin"* ]]; then
                echo "Reboot for SHELL change to take effect."
            fi
        fi
    }

    function install_linux() {
        if [ "$CODESPACES" = true ]; then
            echo "Running in codespaces...skip install_linux"
            return
        fi

        install_my_tool xclip xsel

        if [ ! -f /usr/local/bin/goto-windows ]; then
            sudo ln -f -s ~/.dotfiles/scripts/goto-windows &&
                mkdir -p ~/.local/share/applications &&
                ln -f -s "$DIR/scripts/uefi-reboot.desktop" ~/.local/share/applications/uefi-reboot.desktop &&
                ln -f -s "$DIR/scripts/goto-windows.desktop" ~/.local/share/applications/goto-windows.desktop
        fi
    }

    function install_macos() {
        if [ "$CODESPACES" = true ]; then
            echo "Running in codespaces...skip install_macos"
            return
        fi

        install_homebrew
    }


    fetch_files

    source $DIR/scripts/install-function

    if [[ "$OSTYPE" == "darwin"* ]]; then
        install_macos
    else
        install_linux
    fi

    install_tools
    install_configs
}
